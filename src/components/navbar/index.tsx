import {useNavigate} from "react-router-dom";
import './style/style.css';
import {Fragment, useEffect, useRef, useState} from "react";
import SearchBar from "../searchBar";

export default function Navbar() {
    const navigate = useNavigate();
    const [isOpen, setIsOpen] = useState(false);
    const data = ['Home', 'About', 'Services', 'Contact', 'Blog', 'Marcas', 'Roupas', 'Cintos', 'Sallo', 'Short','Bermuda','Bivik','DLZ'];

    const searchRef = useRef<HTMLDivElement>(null);

    const handleSearch = () => {
        setIsOpen(true);
    };

    const handleClickOutside = (event: MouseEvent) => {
        if (searchRef.current && !searchRef.current.contains(event.target as Node)) {
            setIsOpen(false);
        }
    };

    useEffect(() => {
        document.addEventListener('mousedown', handleClickOutside);
        return () => {
            document.removeEventListener('mousedown', handleClickOutside);
        }
    }, []);

    return (
        <Fragment>
            <div className={'w-full h-full bg-black flex items-center justify-center'}
                 style={{boxShadow: '0px 4px 60px 0px rgba(0, 0, 0, 0.25)'}}>
                <div className={'w-full inline-flex text-white p-6 gap-32 items-center mx-56'}>
                    <button
                        className={'w-full'}
                        onClick={() => navigate('/')}
                    >
                        <svg width="231" height="31" viewBox="0 0 231 31" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M11.0146 7.10449H15.9365L27.0107 30H22.1328L20.3018 26.1475H6.92773L5.15527 30H0.262695L11.0146 7.10449ZM18.4707 22.3242L13.5195 11.9238L8.7002 22.3242H18.4707ZM8.07031 3.03223L17.9434 0.263672L18.9688 3.89648L8.97852 6.22559L8.07031 3.03223ZM29.0029 18.3398C29.0029 16.7285 29.3057 15.2246 29.9111 13.8281C30.5166 12.4219 31.4004 11.2012 32.5625 10.166C33.7246 9.13086 35.1504 8.31543 36.8398 7.71973C38.5391 7.12402 40.4824 6.82617 42.6699 6.82617C43.4609 6.82617 44.252 6.87012 45.043 6.95801C45.8438 7.03613 46.6299 7.16309 47.4014 7.33887C48.1826 7.51465 48.9395 7.73926 49.6719 8.0127C50.4141 8.27637 51.1172 8.59375 51.7812 8.96484L49.6426 12.4805C49.2422 12.2461 48.7881 12.0361 48.2803 11.8506C47.7725 11.6553 47.2256 11.4941 46.6396 11.3672C46.0635 11.2305 45.4629 11.1279 44.8379 11.0596C44.2227 10.9912 43.6025 10.957 42.9775 10.957C41.5322 10.957 40.2432 11.1426 39.1104 11.5137C37.9775 11.875 37.0205 12.3877 36.2393 13.0518C35.458 13.7061 34.8623 14.4922 34.4521 15.4102C34.042 16.3281 33.8369 17.334 33.8369 18.4277C33.8369 19.5605 34.0518 20.6006 34.4814 21.5479C34.9111 22.4951 35.5215 23.3105 36.3125 23.9941C37.1035 24.6777 38.0605 25.2148 39.1836 25.6055C40.3066 25.9863 41.5615 26.1768 42.9482 26.1768C44.0518 26.1768 45.0625 26.0547 45.9805 25.8105C46.8984 25.5566 47.6992 25.2002 48.3828 24.7412C49.0664 24.2822 49.623 23.7305 50.0527 23.0859C50.4824 22.4316 50.7656 21.6992 50.9023 20.8887H42.9043V17.0654H55.0771V17.0801L55.0918 17.0654C55.3359 18.2373 55.4092 19.3799 55.3115 20.4932C55.2236 21.5967 54.9697 22.6416 54.5498 23.6279C54.1396 24.6045 53.5732 25.5029 52.8506 26.3232C52.1279 27.1436 51.2637 27.8516 50.2578 28.4473C49.252 29.0332 48.1094 29.4922 46.8301 29.8242C45.5508 30.1465 44.1494 30.3076 42.626 30.3076C40.4971 30.3076 38.5879 29.9951 36.8984 29.3701C35.2188 28.7451 33.793 27.8906 32.6211 26.8066C31.4492 25.7227 30.5508 24.4531 29.9258 22.998C29.3105 21.543 29.0029 19.9902 29.0029 18.3398ZM59.7061 7.10449H64.3496V19.7168C64.3496 20.752 64.4912 21.6748 64.7744 22.4854C65.0576 23.2861 65.4775 23.9648 66.0342 24.5215C66.6006 25.0781 67.2988 25.5029 68.1289 25.7959C68.959 26.0791 69.9258 26.2207 71.0293 26.2207C72.123 26.2207 73.085 26.0791 73.915 25.7959C74.7549 25.5029 75.4531 25.0781 76.0098 24.5215C76.5762 23.9648 77.001 23.2861 77.2842 22.4854C77.5674 21.6748 77.709 20.752 77.709 19.7168V7.10449H82.3525V20.2734C82.3525 21.7773 82.0986 23.1445 81.5908 24.375C81.083 25.6055 80.3457 26.6602 79.3789 27.5391C78.4121 28.418 77.2256 29.0967 75.8193 29.5752C74.4229 30.0537 72.8262 30.293 71.0293 30.293C69.2324 30.293 67.6309 30.0537 66.2246 29.5752C64.8281 29.0967 63.6465 28.418 62.6797 27.5391C61.7129 26.6602 60.9756 25.6055 60.4678 24.375C59.96 23.1445 59.7061 21.7773 59.7061 20.2734V7.10449ZM95.8291 7.10449H100.751L111.825 30H106.947L105.116 26.1475H91.7422L89.9697 30H85.0771L95.8291 7.10449ZM103.285 22.3242L98.334 11.9238L93.5146 22.3242H103.285ZM125.346 7.10449H133.739C136.19 7.10449 138.319 7.36816 140.126 7.89551C141.933 8.42285 143.427 9.17969 144.608 10.166C145.8 11.1426 146.684 12.334 147.26 13.7402C147.846 15.1367 148.139 16.709 148.139 18.457C148.139 20.1172 147.851 21.6553 147.274 23.0713C146.698 24.4775 145.819 25.6982 144.638 26.7334C143.456 27.7588 141.962 28.5645 140.155 29.1504C138.349 29.7266 136.22 30.0146 133.769 30.0146L125.346 30V7.10449ZM134.882 25.9863C136.269 25.9863 137.484 25.8105 138.529 25.459C139.574 25.0977 140.443 24.5898 141.137 23.9355C141.84 23.2812 142.367 22.4902 142.719 21.5625C143.07 20.6348 143.246 19.5996 143.246 18.457C143.246 17.334 143.07 16.3232 142.719 15.4248C142.367 14.5166 141.84 13.75 141.137 13.125C140.443 12.4902 139.574 12.002 138.529 11.6602C137.484 11.3184 136.269 11.1475 134.882 11.1475H129.989V25.9863H134.882ZM151.449 18.4863C151.449 16.7578 151.767 15.1758 152.401 13.7402C153.036 12.3047 153.925 11.0742 155.067 10.0488C156.22 9.01367 157.597 8.21289 159.198 7.64648C160.81 7.08008 162.592 6.79688 164.545 6.79688C166.488 6.79688 168.266 7.08008 169.877 7.64648C171.488 8.21289 172.865 9.01367 174.008 10.0488C175.16 11.0742 176.054 12.3047 176.688 13.7402C177.323 15.1758 177.641 16.7578 177.641 18.4863C177.641 20.2246 177.323 21.8213 176.688 23.2764C176.054 24.7217 175.16 25.9668 174.008 27.0117C172.865 28.0566 171.488 28.8721 169.877 29.458C168.266 30.0342 166.488 30.3223 164.545 30.3223C162.592 30.3223 160.81 30.0342 159.198 29.458C157.597 28.8721 156.22 28.0566 155.067 27.0117C153.925 25.9668 153.036 24.7217 152.401 23.2764C151.767 21.8213 151.449 20.2246 151.449 18.4863ZM156.093 18.4863C156.093 19.668 156.303 20.7324 156.723 21.6797C157.152 22.627 157.743 23.4375 158.495 24.1113C159.257 24.7754 160.15 25.2881 161.176 25.6494C162.211 26.0107 163.334 26.1914 164.545 26.1914C165.756 26.1914 166.874 26.0107 167.899 25.6494C168.935 25.2881 169.828 24.7754 170.58 24.1113C171.332 23.4375 171.923 22.627 172.353 21.6797C172.782 20.7324 172.997 19.668 172.997 18.4863C172.997 17.3047 172.782 16.2451 172.353 15.3076C171.923 14.3701 171.332 13.5791 170.58 12.9346C169.828 12.2803 168.935 11.7822 167.899 11.4404C166.874 11.0986 165.756 10.9277 164.545 10.9277C163.334 10.9277 162.211 11.0986 161.176 11.4404C160.15 11.7822 159.257 12.2803 158.495 12.9346C157.743 13.5791 157.152 14.3701 156.723 15.3076C156.303 16.2451 156.093 17.3047 156.093 18.4863ZM181.405 18.4131C181.405 16.7822 181.713 15.2637 182.328 13.8574C182.943 12.4414 183.832 11.2158 184.994 10.1807C186.166 9.13574 187.592 8.31543 189.271 7.71973C190.961 7.12402 192.87 6.82617 194.999 6.82617C196.864 6.82617 198.573 7.0166 200.126 7.39746C201.688 7.76855 203.139 8.33984 204.477 9.11133L202.338 12.627C201.938 12.3633 201.474 12.1289 200.946 11.9238C200.429 11.7188 199.872 11.5479 199.276 11.4111C198.69 11.2646 198.08 11.1523 197.445 11.0742C196.82 10.9961 196.2 10.957 195.585 10.957C194.101 10.957 192.777 11.1426 191.615 11.5137C190.453 11.875 189.472 12.3877 188.671 13.0518C187.88 13.7061 187.274 14.4922 186.854 15.4102C186.444 16.3184 186.239 17.3193 186.239 18.4131C186.239 19.5459 186.454 20.5859 186.884 21.5332C187.313 22.4805 187.934 23.3008 188.744 23.9941C189.564 24.6777 190.561 25.2148 191.732 25.6055C192.914 25.9863 194.247 26.1768 195.731 26.1768C196.405 26.1768 197.074 26.1279 197.738 26.0303C198.402 25.9326 199.042 25.8008 199.657 25.6348C200.282 25.459 200.883 25.2539 201.459 25.0195C202.035 24.7754 202.572 24.5117 203.07 24.2285L205.209 27.7441C203.959 28.5449 202.514 29.1748 200.873 29.6338C199.232 30.083 197.489 30.3076 195.644 30.3076C193.29 30.3076 191.225 30.0049 189.447 29.3994C187.67 28.7842 186.186 27.9443 184.994 26.8799C183.803 25.8057 182.904 24.5459 182.299 23.1006C181.703 21.6455 181.405 20.083 181.405 18.4131ZM210.336 7.10449H229.833V11.1768H214.979V15.7471H228.134V19.5703H214.979V25.9424H230.141V30H210.336V7.10449Z"
                                fill="white"/>
                        </svg>
                    </button>
                    <div className={'w-full inline-flex gap-32 items-center font-montserrat font-semibold'}>
                        <button
                            className={'transition-colors hover:text-orange-500'}
                            onClick={() => navigate('/masculino')}
                        >
                            Masculino
                        </button>
                        <button
                            className={'transition-colors hover:text-orange-500'}
                            onClick={() => navigate('/feminino')}
                        >
                            Feminino
                        </button>
                        <button
                            className={'transition-colors hover:text-orange-500'}
                            onClick={() => navigate('/marcas')}
                        >
                            Marcas
                        </button>
                    </div>
                    <div className={'items-end justify-end w-full inline-flex gap-10'} ref={searchRef}>
                        <button
                            onClick={handleSearch}
                            className={'user-icon-head'}
                        >
                            <svg width="22" height="22" viewBox="0 0 22 22" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M15.7434 14.0144H14.7485L14.3959 13.6744C15.9072 11.9112 16.688 9.50572 16.2598 6.94911C15.6679 3.44795 12.746 0.652054 9.21968 0.223854C3.89237 -0.43104 -0.591136 4.05247 0.0637585 9.37978C0.491958 12.9061 3.28785 15.828 6.78902 16.4199C9.34562 16.8481 11.7511 16.0673 13.5143 14.556L13.8543 14.9086V15.9035L19.2068 21.256C19.7232 21.7724 20.567 21.7724 21.0833 21.256C21.5997 20.7397 21.5997 19.8959 21.0833 19.3795L15.7434 14.0144ZM8.18696 14.0144C5.05103 14.0144 2.51961 11.483 2.51961 8.34706C2.51961 5.21113 5.05103 2.67971 8.18696 2.67971C11.3229 2.67971 13.8543 5.21113 13.8543 8.34706C13.8543 11.483 11.3229 14.0144 8.18696 14.0144Z"
                                    fill="white"/>
                            </svg>
                        </button>
                        <button
                            className={'user-icon'}
                            onClick={() => navigate('/profile')}
                        >
                            <svg width="23" height="22" viewBox="0 0 23 22" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <g id="head">
                                    <path
                                        d="M11.5963 10.7688C14.527 10.7688 16.9007 8.39513 16.9007 5.46446C16.9007 2.5338 14.527 0.160095 11.5963 0.160095C8.66562 0.160095 6.29192 2.5338 6.29192 5.46446C6.29192 8.39513 8.66562 10.7688 11.5963 10.7688Z"
                                        fill="white"/>
                                </g>
                                <g id="body">
                                    <path
                                        d="M11.5963 13.421C8.05562 13.421 0.987549 15.198 0.987549 18.7254V20.0515C0.987549 20.7808 1.58429 21.3776 2.31364 21.3776H20.8789C21.6083 21.3776 22.205 20.7808 22.205 20.0515V18.7254C22.205 15.198 15.137 13.421 11.5963 13.421Z"
                                        fill="white"/>
                                </g>
                            </svg>
                        </button>
                        <button
                            className="favorite-icon"
                            onClick={() => navigate('/favorites')}
                        >
                            <svg width="24" height="21" viewBox="0 0 24 21" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M13.891 20.0297C13.0095 20.83 11.6524 20.83 10.7709 20.0181L10.6433 19.9021C4.55393 14.3926 0.575525 10.7854 0.72631 6.28505C0.795903 4.31324 1.805 2.42263 3.44044 1.30914C6.50254 -0.778653 10.2838 0.195651 12.3252 2.58501C14.3666 0.195651 18.1478 -0.790252 21.2099 1.30914C22.8453 2.42263 23.8544 4.31324 23.924 6.28505C24.0864 10.7854 20.0964 14.3926 14.007 19.9253L13.891 20.0297Z"
                                    fill="white"/>
                            </svg>
                        </button>
                        <button
                            className={'user-icon-head'}
                            onClick={() => navigate('/cart')}
                        >
                            <svg width="21" height="21" viewBox="0 0 21 21" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M6.6096 16.5975C5.47952 16.5975 4.56519 17.5221 4.56519 18.6522C4.56519 19.7823 5.47952 20.7069 6.6096 20.7069C7.73967 20.7069 8.66428 19.7823 8.66428 18.6522C8.66428 17.5221 7.73967 16.5975 6.6096 16.5975ZM0.445557 1.18744C0.445557 1.75247 0.90786 2.21478 1.4729 2.21478H2.50024L6.19866 10.0123L4.81175 12.519C4.06179 13.8956 5.04804 15.5702 6.6096 15.5702H17.9103C18.4754 15.5702 18.9377 15.1079 18.9377 14.5429C18.9377 13.9778 18.4754 13.5155 17.9103 13.5155H6.6096L7.73967 11.4608H15.3934C16.1639 11.4608 16.8419 11.0396 17.1912 10.4027L20.8691 3.73524C21.2492 3.05719 20.7561 2.21478 19.9753 2.21478H4.77066L4.08234 0.745679C3.91797 0.38611 3.54812 0.160095 3.15773 0.160095H1.4729C0.90786 0.160095 0.445557 0.622398 0.445557 1.18744ZM16.883 16.5975C15.7529 16.5975 14.8386 17.5221 14.8386 18.6522C14.8386 19.7823 15.7529 20.7069 16.883 20.7069C18.0131 20.7069 18.9377 19.7823 18.9377 18.6522C18.9377 17.5221 18.0131 16.5975 16.883 16.5975Z"
                                    fill="white"/>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
            {isOpen && (
                <SearchBar data={data} isOpen={isOpen} setIsOpen={setIsOpen}/>
            )}
        </Fragment>
    )
}